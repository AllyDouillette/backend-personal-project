generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  username   String      @unique
  email      String      @unique @default(uuid())
  password   String
  role       Role
  category   Category[]
  cards      Card[]
  statistics Statistic[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  profile    Profile?
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Statistic {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime
  correct   Int
  incorrect Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  cards     Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          Int       @id @default(autoincrement())
  ownerId     String
  owner       User      @relation(fields: [ownerId], references: [id])
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  prompt      String
  answer      String
  hint        String?
  level       Int       @default(0)
  repetitions Int       @default(0)
  lastAskedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
